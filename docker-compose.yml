version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: public_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    restart: unless-stopped
    networks:
      - public_network

  policy_holder_bot:
    build:
      context: ./policy_holder_bot
      dockerfile: Dockerfile
    container_name: policy_holder_bot
    volumes:
      - ./policy_holder_bot/bot.log:/app/bot.log
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      DATABASE_URL: ${DATABASE_URL}
      ICP_CANISTER_ID: ${ICP_CANISTER_ID}
      ICP_CANISTER_URL: ${ICP_CANISTER_URL}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      OPEN_BANKING_URL: ${OPEN_BANKING_URL}
      SENDER_EMAIL: ${SENDER_EMAIL}
    depends_on:
      - postgres
    networks:
      - public_network
  
  open_banking_api_mock:
    build:
      context: ./open_banking_api_mock
      dockerfile: Dockerfile
    container_name: open_banking_api_mock
    ports:
      - "8000:8000"
    volumes:
      - ./open_banking_api_mock/mock.log:/app/mock.log
    networks:
      - public_network

  insurer_backend:
    build:
      context: ./insurer_backend
      dockerfile: Dockerfile
    container_name: insurer_backend
    ports:
      - "8001:8001"
    volumes:
      - ./insurer_backend/insurer.log:/src/insurer.log
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - public_network

  insurer_frontend:
    build:
      context: ./insurer_frontend
      dockerfile: Dockerfile
    container_name: insurer_frontend
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - public_network

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - public_network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./insurer_backend/insurer.log:/var/log/insurer.log:ro
      - ./open_banking_api_mock/mock.log:/var/log/mock.log:ro
      - ./policy_holder_bot/bot.log:/var/log/bot.log:ro
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - public_network
    depends_on:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.9
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - public_network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=lyrics

volumes:
  pg_data:

networks:
  public_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
